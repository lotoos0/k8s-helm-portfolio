# Minimal CI pipeline: static analysis, unit tests, and Docker image builds
# Runs on PR (only when relevant paths change) and on push to main
name: CI (lint + test + build)
on:
  pull_request:
    # Only trigger when code, config, or workflow itself changes
    paths:
      - "api/**"
      - "worker/**"
      - "deploy/helm/api/**"
      - "Makefile"
      - ".github/workflows/**"
  push:
    branches: ["main", "develop"]
jobs:
  # Job 1: Static analysis (ruff, black) + unit tests with coverage
  python-tests:
    name: Lint & Test (API)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      # Cache pip packages to speed up subsequent runs
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('api/requirements.txt', 'api/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install deps (API + dev)
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt
          pip install -r api/requirements-dev.txt
      - name: Ruff (lint)
        run: ruff check api
      - name: Black (check)
        run: black --check api
      - name: Pytest (coverage)
        run: pytest -q --cov=api --cov-report=term-missing
        env:
          PYTHONPATH: .
  # Job 2: Build and push Docker images for api and worker to registries
  docker-build-push:
    name: Docker Build & Push (${{ matrix.svc }})
    runs-on: ubuntu-latest
    needs: [python-tests]
    strategy:
      fail-fast: false
      matrix:
        svc: ["api", "worker"]
        registry: ["ghcr", "dockerhub"]
    env:
      IMAGE_NAME_API_GHCR: ghcr.io/${{ github.repository_owner }}/october-api
      IMAGE_NAME_WORKER_GHCR: ghcr.io/${{ github.repository_owner }}/october-worker
      IMAGE_NAME_API_DH: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/october-api
      IMAGE_NAME_WORKER_DH: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/october-worker
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      # Login (registry switch)
      - name: Login GHCR
        if: matrix.registry == 'ghcr'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Login DockerHub
        if: matrix.registry == 'dockerhub'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Compute tags
        id: meta
        run: |
          SHA_TAG=sha-${GITHUB_SHA::7}

          # Check if DockerHub secrets are set when using dockerhub registry
          if [[ "${{ matrix.registry }}" == "dockerhub" ]]; then
            if [[ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]]; then
              echo "::error::DOCKERHUB_USERNAME secret is not set."
              exit 1
            fi
          fi

          if [[ "${{ matrix.svc }}" == "api" ]]; then
            if [[ "${{ matrix.registry }}" == "ghcr" ]]; then
              IMAGE="${{ env.IMAGE_NAME_API_GHCR }}"
            else
              IMAGE="${{ env.IMAGE_NAME_API_DH }}"
            fi
          else
            if [[ "${{ matrix.registry }}" == "ghcr" ]]; then
              IMAGE="${{ env.IMAGE_NAME_WORKER_GHCR }}"
            else
              IMAGE="${{ env.IMAGE_NAME_WORKER_DH }}"
            fi
          fi

          # Validate IMAGE format
          if [[ -z "$IMAGE" || "$IMAGE" == *"//"* ]]; then
            echo "::error::Invalid IMAGE format: $IMAGE"
            exit 1
          fi

          TAGS="${IMAGE}:dev,${IMAGE}:${SHA_TAG}"
          # If it's a git tag push, add semver tag
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            TAGS="${TAGS},${IMAGE}:${GITHUB_REF_NAME}"
          fi
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.svc }}
          file: ./${{ matrix.svc }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
