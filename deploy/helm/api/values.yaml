namespace: october
imagePullPolicy: IfNotPresent
# Global toggles
serviceAccount:
  create: true
  name: ""
imagePullSecrets: []
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/metrics"
  prometheus.io/port: "8000"
podLabels: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001
  fsGroup: 10001
containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop: ["ALL"]
nodeSelector: {}
tolerations: []
affinity: {}
api:
  image:
    repository: october-api
    tag: dev
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    className: nginx
    host: ""
    path: /(.*)
  hpa:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPU: 60
  podAnnotations: {} # per-component override
  podLabels: {}
  podSecurityContext: {} # per-component override
  containerSecurityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
worker:
  image:
    repository: october-worker
    tag: dev
  replicaCount: 1
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 300m
      memory: 256Mi
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  containerSecurityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
redis:
  enabled: true
  image: redis:7-alpine
  storage: 1Gi
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
env:
  APP_NAME: "DevOps October API"
  APP_ENV: "dev"
  PORT: "8000"
  BROKER_URL: "redis://redis:6379/0"
  RESULT_BACKEND: "redis://redis:6379/1"
secrets: {}
